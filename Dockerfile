# Generated by https://smithery.ai. See: https://smithery.ai/docs/config#dockerfile
# Use a Python image with uv pre-installed
FROM ghcr.io/astral-sh/uv:python3.13-bookworm-slim AS uv

# Set working directory
WORKDIR /app

# Enable bytecode compilation
ENV UV_COMPILE_BYTECODE=1

# Link mode for uv
ENV UV_LINK_MODE=copy

# Install dependencies and mcp-openapi using uv
RUN --mount=type=cache,target=/root/.cache/uv \
    --mount=type=bind,source=uv.lock,target=uv.lock \
    --mount=type=bind,source=pyproject.toml,target=pyproject.toml \
    uv sync --frozen --no-install-project --no-dev --no-editable

# Add the rest of the project source code and install it
ADD . /app
RUN --mount=type=cache,target=/root/.cache/uv \
    uv sync --frozen --no-dev --no-editable

# Use a lighter Python image for the release
FROM python:3.13-slim-bookworm

# Set working directory
WORKDIR /app

# Copy the installed packages from the uv stage
COPY --from=uv /root/.local /root/.local
COPY --from=uv --chown=app:app /app/.venv /app/.venv

# Ensure executables are found
ENV PATH="/app/.venv/bin:$PATH"

# Default entry point for the container
ENTRYPOINT ["mcp-openapi", "--openapi-url=http://localhost:8000/openapi.json", "stdio"]
